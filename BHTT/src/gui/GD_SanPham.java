/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connectDB.ConnectDB;
import dao.DAO_ChatLieu;
import dao.DAO_KichThuoc;
import dao.DAO_LoaiKhachHang;
import dao.DAO_LoaiSP;
import dao.DAO_MauSac;
import dao.DAO_NhaCungCap;
import dao.DAO_SanPham;
import entity.ChatLieu;
import entity.KichThuoc;
import entity.LoaiSanPham;
import entity.MauSac;
import entity.NhaCungCap;
import entity.SanPham;
import java.awt.Image;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ACER
 */
public class GD_SanPham extends javax.swing.JInternalFrame {

    private String username;
    private DAO_SanPham sp_dao;
    private DAO_LoaiSP lsp_dao;
    private DAO_MauSac mau_dao;
    private DAO_NhaCungCap ncc_dao;
    private DAO_ChatLieu cl_dao;
    private DAO_KichThuoc kt_dao;
    private String filename = null;
    private byte[] anhSP = null;
    private  DefaultTableModel modolSP;
    List<RowFilter<DefaultTableModel, Object>> filters = new ArrayList<>();
    private TableRowSorter<DefaultTableModel> tr,tr1;
    int index = -1;

    int hangChon;

    /**
     * Creates new form QuanLyHoaDon
     */
    public GD_SanPham(String _username) {
        try {
            ConnectDB.getInstance().connect();
        } catch (Exception e) {
        }
        this.setRootPaneCheckingEnabled(false);
        javax.swing.plaf.InternalFrameUI ui
                = this.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ui).setNorthPane(null);
        initComponents();
        this.setFocusable(true);
        username = _username;
        modolSP = (DefaultTableModel) jtbSanPham.getModel();

        hangChon = jtbSanPham.getSelectedRow();
        DocDuLieuLenTable();
        DocDuLieuVaoCombobox();
        moKhoaTextfields(false);
        btnChonAnh.setEnabled(false);
        btnLuu.setEnabled(false);
        tr = new TableRowSorter<DefaultTableModel>(modolSP);
        tr1=new TableRowSorter<DefaultTableModel>(modolSP);

        jtbSanPham.setRowSorter(tr1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlTren = new javax.swing.JPanel();
        pnlThongTin = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        hanSD = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaMoTa = new javax.swing.JTextArea();
        cbxKTF = new javax.swing.JComboBox<>();
        cbxNCCF = new javax.swing.JComboBox<>();
        cbxMF = new javax.swing.JComboBox<>();
        cbxCLF = new javax.swing.JComboBox<>();
        cbxPLF = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        ngayNhap = new com.toedter.calendar.JDateChooser();
        txtTenSP = new javax.swing.JTextField();
        txtSL = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        pnlNut = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();
        pnlNutSP = new javax.swing.JPanel();
        btnChonAnh = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoaSP = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnIX = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnEX = new javax.swing.JButton();
        pnlGiua = new javax.swing.JPanel();
        cbxPLL = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbxCLL = new javax.swing.JComboBox<>();
        cbxML = new javax.swing.JComboBox<>();
        cbxKTL = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        txtTim = new swing.TextFieldAnimation();
        pnlDuoi = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbSanPham = new javax.swing.JTable();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setFrameIcon(null);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        pnlMain.setBackground(new java.awt.Color(204, 204, 255));
        pnlMain.setLayout(new javax.swing.BoxLayout(pnlMain, javax.swing.BoxLayout.Y_AXIS));

        pnlTren.setBackground(new java.awt.Color(204, 204, 255));
        pnlTren.setMaximumSize(new java.awt.Dimension(2147483647, 310));
        pnlTren.setMinimumSize(new java.awt.Dimension(100, 300));
        pnlTren.setPreferredSize(new java.awt.Dimension(1500, 340));
        pnlTren.setLayout(new java.awt.BorderLayout());

        pnlThongTin.setBackground(new java.awt.Color(204, 204, 255));
        pnlThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 102)), "Thông tin sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        pnlThongTin.setToolTipText("");
        pnlThongTin.setMaximumSize(new java.awt.Dimension(841, 32767));
        pnlThongTin.setPreferredSize(new java.awt.Dimension(980, 280));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel4.setText("Tên sản phẩm :");
        jLabel4.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel5.setText("Số lượng:");
        jLabel5.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setText("Giá: ");
        jLabel6.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel7.setText("Nhà cung cấp:");
        jLabel7.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel8.setText("Kích thước: ");
        jLabel8.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel9.setText("Mô tả: ");
        jLabel9.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel10.setText("Hạn sử dụng: ");
        jLabel10.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel14.setText("Phân loại: ");
        jLabel14.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel15.setText("Màu sắc: ");
        jLabel15.setPreferredSize(new java.awt.Dimension(106, 27));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel16.setText("Chất liệu: ");
        jLabel16.setPreferredSize(new java.awt.Dimension(106, 27));

        txaMoTa.setColumns(20);
        txaMoTa.setRows(5);
        jScrollPane2.setViewportView(txaMoTa);

        cbxKTF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        cbxNCCF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbxNCCF.setToolTipText("");

        cbxMF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        cbxCLF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        cbxPLF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel12.setText("Ngày nhập:");
        jLabel12.setPreferredSize(new java.awt.Dimension(106, 27));

        txtTenSP.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        txtSL.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSLActionPerformed(evt);
            }
        });

        txtGia.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        javax.swing.GroupLayout pnlThongTinLayout = new javax.swing.GroupLayout(pnlThongTin);
        pnlThongTin.setLayout(pnlThongTinLayout);
        pnlThongTinLayout.setHorizontalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSP)
                            .addComponent(txtSL)
                            .addComponent(txtGia)
                            .addComponent(cbxNCCF, 0, 254, Short.MAX_VALUE)
                            .addComponent(cbxKTF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(59, 59, 59)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongTinLayout.createSequentialGroup()
                                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hanSD, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                                    .addComponent(cbxPLF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ngayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnlThongTinLayout.createSequentialGroup()
                                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxMF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxCLF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jScrollPane2))
                .addGap(34, 34, 34))
        );
        pnlThongTinLayout.setVerticalGroup(
            pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinLayout.createSequentialGroup()
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ngayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hanSD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSL, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxPLF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtGia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxNCCF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxKTF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxCLF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 62, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel15.getAccessibleContext().setAccessibleName("a");
        jLabel16.getAccessibleContext().setAccessibleName("a");

        pnlTren.add(pnlThongTin, java.awt.BorderLayout.WEST);

        pnlNut.setBackground(new java.awt.Color(204, 204, 255));
        pnlNut.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlNut.setMaximumSize(new java.awt.Dimension(300, 32767));
        pnlNut.setPreferredSize(new java.awt.Dimension(300, 300));
        pnlNut.setLayout(new javax.swing.BoxLayout(pnlNut, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setMaximumSize(new java.awt.Dimension(9999, 200));
        lblHinhAnh.setPreferredSize(new java.awt.Dimension(5000, 200));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlNut.add(jPanel1);

        pnlNutSP.setBackground(new java.awt.Color(204, 204, 255));
        pnlNutSP.setLayout(new java.awt.GridLayout(3, 2));

        btnChonAnh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnChonAnh.setText("Chọn ảnh");
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnChonAnh);

        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuu.setText("Lưu ");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnLuu);

        btnXoaSP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoaSP.setText("Xóa");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnXoaSP);

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnSua);

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnThem);

        btnIX.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnIX.setText("Thêm nhiều");
        btnIX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIXActionPerformed(evt);
            }
        });
        pnlNutSP.add(btnIX);

        pnlNut.add(pnlNutSP);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setLayout(new java.awt.GridLayout());

        btnEX.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEX.setText("Xuất file");
        btnEX.setMaximumSize(new java.awt.Dimension(200, 27));
        btnEX.setMinimumSize(new java.awt.Dimension(100, 27));
        btnEX.setPreferredSize(new java.awt.Dimension(200, 27));
        btnEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEXActionPerformed(evt);
            }
        });
        jPanel2.add(btnEX);

        pnlNut.add(jPanel2);

        pnlTren.add(pnlNut, java.awt.BorderLayout.CENTER);

        pnlMain.add(pnlTren);

        pnlGiua.setBackground(new java.awt.Color(204, 204, 255));
        pnlGiua.setMaximumSize(new java.awt.Dimension(32767, 50));
        pnlGiua.setPreferredSize(new java.awt.Dimension(3666, 100));

        cbxPLL.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbxPLL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbxPLL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxCLLMouseClicked(evt);
            }
        });
        cbxPLL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPLLActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel11.setText("Phân loại:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel17.setText("Màu sắc:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel18.setText("Chất liệu:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel19.setText("Kích thước:");

        cbxCLL.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbxCLL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbxCLL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxCLLMouseClicked(evt);
            }
        });
        cbxCLL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCLLActionPerformed(evt);
            }
        });

        cbxML.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbxML.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbxML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxCLLMouseClicked(evt);
            }
        });
        cbxML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMLActionPerformed(evt);
            }
        });

        cbxKTL.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cbxKTL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbxKTL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxCLLMouseClicked(evt);
            }
        });
        cbxKTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxKTLActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel20.setText("Tìm kiếm:");

        txtTim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimMouseClicked(evt);
            }
        });
        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlGiuaLayout = new javax.swing.GroupLayout(pnlGiua);
        pnlGiua.setLayout(pnlGiuaLayout);
        pnlGiuaLayout.setHorizontalGroup(
            pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGiuaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel17))
                .addGap(36, 36, 36)
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxPLL, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxML, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(41, 41, 41)
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxCLL, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxKTL, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        pnlGiuaLayout.setVerticalGroup(
            pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGiuaLayout.createSequentialGroup()
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGiuaLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(cbxPLL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGiuaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbxCLL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGiuaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cbxML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlGiuaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(cbxKTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGiuaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlGiuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pnlMain.add(pnlGiua);

        pnlDuoi.setBackground(new java.awt.Color(204, 204, 255));
        pnlDuoi.setMaximumSize(new java.awt.Dimension(2147483647, 470));
        pnlDuoi.setMinimumSize(new java.awt.Dimension(1150, 300));
        pnlDuoi.setPreferredSize(new java.awt.Dimension(1314, 400));
        pnlDuoi.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32767, 460));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 200));

        jtbSanPham.setAutoCreateRowSorter(true);
        jtbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã ", "Tên sản phẩm", "Số lượng", "Giá", "Phân loại", "Nhà cung cấp", "Màu sắc", "Chất liệu", "Kích thước"
            }
        ));
        jtbSanPham.setMaximumSize(new java.awt.Dimension(2147483647, 460));
        jtbSanPham.setMinimumSize(new java.awt.Dimension(1500, 300));
        jtbSanPham.setPreferredSize(new java.awt.Dimension(750, 450));
        jtbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbSanPham);

        pnlDuoi.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pnlMain.add(pnlDuoi);

        getContentPane().add(pnlMain);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbSanPhamMouseClicked
        int chon = jtbSanPham.getSelectedRow();
        String ma = jtbSanPham.getValueAt(chon, 1).toString();
        SanPham spp = new DAO_SanPham().laySanPhamBangMa(ma);
        txtTenSP.setText(spp.getTenSP());
        txtSL.setText(spp.getSoLuong() + "");
        txtGia.setText(spp.getGiaGoc() + "");
        cbxPLF.setSelectedItem(spp.getLoaiSanPham().getTenLoaiSP());
        cbxMF.setSelectedItem(spp.getMauSac().getTenMau());
        cbxCLF.setSelectedItem(spp.getChatLieu().getTenChatLieu());
        cbxNCCF.setSelectedItem(spp.getNhaCungCap().getTenNCC());
        cbxKTF.setSelectedItem(spp.getKichThuoc().getTenKichThuoc());
        txaMoTa.setText(spp.getMoTa());
        hanSD.setDate(spp.getNgayNhap());
        ngayNhap.setDate(spp.getHanSD());
        byte[] hinhanh = spp.getHinhAnh();///
        if (hinhanh == null) {
            lblHinhAnh.setIcon(null);
        } else {
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(hinhanh).getImage().getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), Image.SCALE_SMOOTH));
            lblHinhAnh.setIcon(imageIcon);
        }
//        lsp_dao = new DAO_LoaiSP();
//        LoaiSanPham listLSP = lsp_dao.layLoaiSPBangMa(spp.getLoaiSanPham().getMaLoaiSP());
//        for (LoaiSanPham lsp: listLSP)
        {

        }

        hangChon = jtbSanPham.getSelectedRow();

    }//GEN-LAST:event_jtbSanPhamMouseClicked
    private void NapDuLieuTuTable() {
        hangChon = jtbSanPham.getSelectedRow();
        
        String ma = modolSP.getValueAt(hangChon, 1).toString();
        SanPham spp = new DAO_SanPham().laySanPhamBangMa(ma);
        txtTenSP.setText(spp.getTenSP());
        txtSL.setText(spp.getSoLuong() + "");
        txtGia.setText(spp.getGiaGoc() + "");
        cbxPLF.setSelectedItem(spp.getLoaiSanPham().getTenLoaiSP());
        cbxMF.setSelectedItem(spp.getMauSac().getTenMau());
        cbxCLF.setSelectedItem(spp.getChatLieu().getTenChatLieu());
        cbxNCCF.setSelectedItem(spp.getNhaCungCap().getTenNCC());
        cbxKTF.setSelectedItem(spp.getKichThuoc().getTenKichThuoc());
        txaMoTa.setText(spp.getMoTa());
        hanSD.setDate(spp.getNgayNhap());
        ngayNhap.setDate(spp.getHanSD());
        byte[] hinhanh = spp.getHinhAnh();///
        if (hinhanh == null) {
            lblHinhAnh.setIcon(null);
        } else {
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(hinhanh).getImage().getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), Image.SCALE_SMOOTH));
            lblHinhAnh.setIcon(imageIcon);
        }
//        lsp_dao = new DAO_LoaiSP();
//        LoaiSanPham listLSP = lsp_dao.layLoaiSPBangMa(spp.getLoaiSanPham().getMaLoaiSP());
//        for (LoaiSanPham lsp: listLSP)
        {

        }

        hangChon = jtbSanPham.getSelectedRow();
    }

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (btnThem.getText().equalsIgnoreCase("Hủy")) {
            String ma = "SP";
            int tachMa;
            int i = 0, j = 1;
            int[] dem = new int[999];
            String id;
            sp_dao = new DAO_SanPham();
            for (SanPham sanpham : sp_dao.getAllSP()) {
                id = sanpham.getMaSP();
                tachMa = Integer.parseInt(id.substring(2, 5));
                dem[i] = tachMa;
                i++;
            }
            i = 0;
            //gd:  String maPhatSinh= ("SP%3d",i);
            while (j < 999) {
                if (dem[i] < j) {
                    if (j <= 9) {
                        ma += "00" + (j);
                    } else {
                        ma += "0" + (j);
                    }
                    break;
                } else if (dem[i] > j) {
                    j = dem[i];
                } else {
                    i++;
                    j++;
                }
            }

            DAO_SanPham sp = new DAO_SanPham();
            MauSac m = mau_dao.layMauSacBangTen(cbxMF.getSelectedItem().toString());
            KichThuoc k = kt_dao.layKichThuocBangTen(cbxKTF.getSelectedItem().toString());
            NhaCungCap ncc = ncc_dao.layNhaCungCapBangTen(cbxNCCF.getSelectedItem().toString());
            LoaiSanPham lsp = lsp_dao.layLoaiSPBangTen(cbxPLF.getSelectedItem().toString());
            ChatLieu cl = cl_dao.layKichThuocBangTen(cbxCLF.getSelectedItem().toString());
            SanPham spp = new SanPham(ma, txtTenSP.getText(), Double.parseDouble(txtGia.getText()), Integer.parseInt(txtSL.getText()), anhSP, txaMoTa.getText(), ngayNhap.getDate(),
                    hanSD.getDate(), new NhaCungCap(ncc.getMaNCC()), new ChatLieu(cl.getMaChatLieu()), new MauSac(m.getMaMau()),
                    new KichThuoc(k.getMaKichThuoc()), new LoaiSanPham(lsp.getMaLoaiSP()));
            try {
                sp_dao.themSP(spp);
                XoaHetDLTrenTbale();
                DocDuLieuLenTable();
                XoaTrang();
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnThem.setText("Thêm");
                int hangChon = jtbSanPham.getSelectedRow();
                NapDuLieuTuTable();
            } catch (Exception e) {
            }
        }
        if (btnSua.getText().equalsIgnoreCase("Hủy")) {
            int hangChon = jtbSanPham.getSelectedRow();
            String ma = modolSP.getValueAt(hangChon, 1).toString();
            DAO_SanPham sp = new DAO_SanPham();
            MauSac m = mau_dao.layMauSacBangTen(cbxMF.getSelectedItem().toString());
            KichThuoc k = kt_dao.layKichThuocBangTen(cbxKTF.getSelectedItem().toString());
            NhaCungCap ncc = ncc_dao.layNhaCungCapBangTen(cbxNCCF.getSelectedItem().toString());
            LoaiSanPham lsp = lsp_dao.layLoaiSPBangTen(cbxPLF.getSelectedItem().toString());
            ChatLieu cl = cl_dao.layKichThuocBangTen(cbxCLF.getSelectedItem().toString());
            SanPham spp = new SanPham(ma, txtTenSP.getText(), Double.parseDouble(txtGia.getText()), Integer.parseInt(txtSL.getText()), anhSP, txaMoTa.getText(), ngayNhap.getDate(),
                    hanSD.getDate(), new NhaCungCap(ncc.getMaNCC()), new ChatLieu(cl.getMaChatLieu()), new MauSac(m.getMaMau()),
                    new KichThuoc(k.getMaKichThuoc()), new LoaiSanPham(lsp.getMaLoaiSP()));
            try {
                sp_dao.CapNhatSP(spp);
                XoaHetDLTrenTbale();
                DocDuLieuLenTable();
                XoaTrang();
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnSua.setText("Sửa");

                NapDuLieuTuTable();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed
    private void moKhoaControls(boolean b) {
        btnChonAnh.setEnabled(b);
        btnLuu.setEnabled(b);
        btnXoaSP.setEnabled(b);
        btnThem.setEnabled(b);
        btnSua.setEnabled(b);
    }

    private void moKhoaTextfields(boolean b) {
        txtGia.setEditable(b);
        txtSL.setEditable(b);
        txtTenSP.setEditable(b);
        txaMoTa.setEditable(b);
        hanSD.setEnabled(b);
        ngayNhap.setEnabled(b);
        cbxCLF.setEnabled(b);
        cbxKTF.setEnabled(b);
        cbxMF.setEnabled(b);
        cbxNCCF.setEnabled(b);
        cbxPLF.setEnabled(b);

    }

    private void XoaTrang() {
        cbxCLF.setSelectedItem("Tất cả");
        cbxMF.setSelectedItem("Tất cả");
        cbxKTF.setSelectedItem("Tất cả");
        cbxNCCF.setSelectedItem("Tất cả");
        cbxPLF.setSelectedItem("Tất cả");
        txtTenSP.setText("");
        txtGia.setText("");
        txtSL.setText("");
        txaMoTa.setText("");
        java.util.Date date = new java.util.Date();
        ngayNhap.setDate(date);
        hanSD.setDate(date);
        txtTenSP.requestFocus();
        lblHinhAnh.setIcon(null);
        anhSP = null;
    }
    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), Image.SCALE_SMOOTH));
        lblHinhAnh.setIcon(imageIcon);
        try {
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int n; (n = fis.read(buf)) != -1;) {
                bos.write(buf, 0, n);
            }
            anhSP = bos.toByteArray();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (btnThem.getText().equalsIgnoreCase("Thêm")) {
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLuu.setEnabled(true);
            btnThem.setEnabled(true);
            btnChonAnh.setEnabled(true);
            XoaTrang();
            btnThem.setText("Hủy");

        } else if (btnThem.getText().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnThem.setText("Thêm");
            int hangChon = jtbSanPham.getSelectedRow();
            if (hangChon != -1) {
                NapDuLieuTuTable();
            }

        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void txtSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSLActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        int r = jtbSanPham.getSelectedRow();
        if (r == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm cần xóa");
            return;
        }
        String ma = modolSP.getValueAt(r, 1).toString();
        int opt = JOptionPane.showConfirmDialog(null, "Xác nhận", "Bạn muốn xóa", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {
            modolSP.removeRow(r); // xóa trong table model
            sp_dao.XoaSP(ma);
            XoaHetDLTrenTbale();
            DocDuLieuLenTable();
        }
    }//GEN-LAST:event_btnXoaSPActionPerformed
    private void filter(String s){
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(modolSP);
        jtbSanPham.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)"+s));

        
    }
    private void txtTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyReleased

        String search = txtTim.getText();
        filter(search);
    }//GEN-LAST:event_txtTimKeyReleased
    private void XoaHetDLTrenTbale() {
        DefaultTableModel fm = (DefaultTableModel) jtbSanPham.getModel();
        fm.getDataVector().removeAllElements();
    }
    private void cbxPLLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPLLActionPerformed

//        String tenLSP = cbxPLL.getSelectedItem().toString();
//        String tenMau = cbxML.getSelectedItem().toString();
//        String tenKT = cbxKTL.getSelectedItem().toString();
//        String tenCL = cbxCLL.getSelectedItem().toString();
//        if (tenLSP.equalsIgnoreCase("Tất cả")){
//            
//        }
//        LoaiSanPham lsp = lsp_dao.layLoaiSPBangTen(tenLSP);
//        ChatLieu cl = cl_dao.layKichThuocBangTen(tenCL);
//        MauSac ms = mau_dao.layMauSacBangTen(tenMau);
//        KichThuoc kt = kt_dao.layKichThuocBangTen(tenKT);
//        String m = ms.getMaMau();
//        String c = cl.getMaChatLieu();
//        String k= kt.getMaKichThuoc();
//        String l = lsp.getMaLoaiSP();
//        if(m ==null){
//            m="";
//        }
//        if(c ==null){
//            c="";
//        }
//        if(k ==null){
//            k="";
//        }
//        if(l ==null){
//            l="";
//        }
//        ArrayList<SanPham> listSP = sp_dao.getDSTheoLoc(m, c, k, l);
//        modolSP.setRowCount(0);
//        
//        int i=1;
//        for( SanPham sp : listSP){
//             modolSP.addRow(new Object[]{i++,
//                sp.getMaSP(),sp.getTenSP(),sp.getSoLuong(),sp.getGiaGoc(),sp.getLoaiSanPham().getTenLoaiSP(),sp.getNhaCungCap().getTenNCC(),sp.getMauSac().getTenMau(), sp.getChatLieu().getTenChatLieu(),sp.getKichThuoc().getTenKichThuoc()
//            ,sp.getNgayNhap()});
//        }
//THƯ
       locPhanLoai();
    }//GEN-LAST:event_cbxPLLActionPerformed
    public void locPhanLoai(){
        String s = cbxPLL.getSelectedItem().toString();
        if (s.equals("Tất cả")) {
            s = "(Tất cả)";

            for (LoaiSanPham lsp : lsp_dao.getAllLSP()) {
                s += "|(" + lsp.getTenLoaiSP() + ")";
            }
        }

        if (filters.isEmpty()) {
            filters.add(RowFilter.regexFilter(s, 5));
        } else {
            filters.set(0, RowFilter.regexFilter(s, 5));
        }
        // Apply filters
        tr1.setRowFilter(RowFilter.andFilter(filters));
    }
    private void cbxKTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxKTLActionPerformed

        locKichThuoc();
    }//GEN-LAST:event_cbxKTLActionPerformed
    public void locKichThuoc(){
        String s = cbxKTL.getSelectedItem().toString();
        if (s.equals("Tất cả")) {
            s = "(Tất cả)";

            for (KichThuoc kt : kt_dao.getAllKT()) {
                s += "|(" + kt.getTenKichThuoc() + ")";
            }
        }

        if (filters.size() < 4) {
            filters.add(RowFilter.regexFilter(s, 9));
        } else {
            filters.set(3, RowFilter.regexFilter(s, 9));
        }
        // Apply filters
        tr1.setRowFilter(RowFilter.andFilter(filters));
    }
    private void cbxCLLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCLLActionPerformed

        locChatLieu();
    }//GEN-LAST:event_cbxCLLActionPerformed
    public void locChatLieu(){
        String s = cbxCLL.getSelectedItem().toString();
        if (s.equals("Tất cả")) {
            s = "(Tất cả )";

            for (ChatLieu cl : cl_dao.getAllCL()) {
                s += "|(" + cl.getTenChatLieu() + ")";
            }
        }
        if (filters.size() < 3) {
            filters.add(RowFilter.regexFilter(s, 8));
        } else {
            filters.set(2, RowFilter.regexFilter(s, 8));
        }
        // Apply filters
        tr1.setRowFilter(RowFilter.andFilter(filters));
    }
    private void cbxMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMLActionPerformed
        locMau();

    }//GEN-LAST:event_cbxMLActionPerformed
    public void locMau(){
                String s = cbxML.getSelectedItem().toString();
        if (s.equals("Tất cả")) {
            s = "(Tất cả)";

            for (MauSac ms : mau_dao.getAllMau()) {
                s += "|(" + ms.getTenMau() + ")";
            }
        }
        if (filters.size() < 2) {
            filters.add(RowFilter.regexFilter(s, 7));
        } else {
            filters.set(1, RowFilter.regexFilter(s, 7));
        }
        // Apply filters
        tr1.setRowFilter(RowFilter.andFilter(filters));
    }
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int hangChon = jtbSanPham.getSelectedRow();
        if (hangChon == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm cần sửa");
            return;
        }
        if (btnSua.getText().equalsIgnoreCase("Sửa")) {
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLuu.setEnabled(true);
            btnSua.setEnabled(true);
            btnChonAnh.setEnabled(true);
            btnSua.setText("Hủy");

        } else if (btnSua.getText().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnSua.setText("Sửa");

            if (hangChon != -1) {
                NapDuLieuTuTable();
            }

        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEXActionPerformed
        try {

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Danh sách sản phẩm ");

            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(3);

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Mã sản phẩm");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên sản phẩm");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Giá gốc");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số lượng");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Mô tả");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Ngày nhập");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Hạn sử dụng");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Nhà cung cấp");

            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Chất liệu");

            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Màu sắc");

            cell = row.createCell(10, CellType.STRING);
            cell.setCellValue("Kích thước");

            cell = row.createCell(11, CellType.STRING);
            cell.setCellValue("Loại sản phẩm");
          
            sp_dao = new DAO_SanPham();
            ArrayList<SanPham> ds = sp_dao.getAllSP();
            for (int i = 0; i < ds.size(); i++) {
                row = sheet.createRow(4 + i);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue(ds.get(i).getMaSP());
                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(ds.get(i).getTenSP());
                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(ds.get(i).getGiaGoc());
                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(ds.get(i).getSoLuong());
                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(ds.get(i).getMoTa());

                cell = row.createCell(5, CellType.STRING);
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String ngayNhap = sdf.format(ds.get(i).getNgayNhap());
                String hanSD = sdf.format(ds.get(i).getHanSD());
                cell.setCellValue(ngayNhap);
                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(hanSD);

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(ds.get(i).getNhaCungCap().getTenNCC());
                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(ds.get(i).getChatLieu().getTenChatLieu());
                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(ds.get(i).getMauSac().getTenMau());
                cell = row.createCell(10, CellType.STRING);
                cell.setCellValue(ds.get(i).getKichThuoc().getTenKichThuoc());
                cell = row.createCell(11, CellType.STRING);
                cell.setCellValue(ds.get(i).getLoaiSanPham().getTenLoaiSP());
            }
            File excelFile;
            FileInputStream excelFIS = null;
            BufferedInputStream excelBIS = null;
            XSSFWorkbook excelImportToJTable = null;
            String defaultCurrentDirectoryPath = "C:\\Users\\bohie\\OneDrive\\Documents\\GitHub\\BHTT_JAVA\\BHTT\\Excell";
            JFileChooser excelFileChooser = new JFileChooser(defaultCurrentDirectoryPath);
            excelFileChooser.setDialogTitle("Chọn file để import");
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILE", "xls", "xlsx", "xlsm");
            excelFileChooser.setFileFilter(fnef);
            int excelChooser = excelFileChooser.showOpenDialog(null);
            if (excelChooser == JFileChooser.APPROVE_OPTION) {
                try {
                    excelFile = excelFileChooser.getSelectedFile();
                    FileOutputStream file = new FileOutputStream(excelFile);
                    workbook.write(file);
                    file.close();
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        }

    }//GEN-LAST:event_btnEXActionPerformed

    private void btnIXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIXActionPerformed
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportToJTable = null;
        String defaultCurrentDirectoryPath = "C:\\Users\\bohie\\OneDrive\\Documents\\GitHub\\BHTT_JAVA\\BHTT\\Excell";
        JFileChooser excelFileChooser = new JFileChooser(defaultCurrentDirectoryPath);
        excelFileChooser.setDialogTitle("Chọn file để import");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILE", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelBIS);
                excelImportToJTable = new XSSFWorkbook(excelFIS);
                XSSFSheet excelSheet = excelImportToJTable.getSheetAt(0);
                for (int row = 2; row <= excelSheet.getLastRowNum(); row++) {

                    XSSFRow excelRow = excelSheet.getRow(row);
                    XSSFCell excelTen = excelRow.getCell(0);
                    XSSFCell excelgia = excelRow.getCell(1);
                    XSSFCell excelSL = excelRow.getCell(2);
                    XSSFCell excelHA = excelRow.getCell(3);
                    XSSFCell excelMT = excelRow.getCell(4);
                    XSSFCell excelNgayNhap = excelRow.getCell(5);
                    XSSFCell excelHD = excelRow.getCell(6);
                    XSSFCell excelNCC = excelRow.getCell(7);
                    XSSFCell excelCL = excelRow.getCell(8);
                    XSSFCell excelMS = excelRow.getCell(9);
                    XSSFCell excelKT = excelRow.getCell(10);
                    XSSFCell excelPL = excelRow.getCell(11);
                    double x = Double.parseDouble(excelSL.toString());
                    int y = (int) x;
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    Date ngayN = sdf.parse(excelNgayNhap.toString());
                    Date hanD = sdf.parse(excelHD.toString());
                    try {
                        File image = new File(excelHA.toString());
                        FileInputStream fis = new FileInputStream(image);
                        ByteArrayOutputStream bos = new ByteArrayOutputStream();
                        byte[] buf = new byte[1024];
                        for (int n; (n = fis.read(buf)) != -1;) {
                            bos.write(buf, 0, n);
                        }
                        anhSP = bos.toByteArray();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                    MauSac m = mau_dao.layMauSacBangTen(excelMS.toString());
                    KichThuoc k = kt_dao.layKichThuocBangTen(excelKT.toString());
                    NhaCungCap ncc = ncc_dao.layNhaCungCapBangTen(excelNCC.toString());
                    LoaiSanPham lsp = lsp_dao.layLoaiSPBangTen(excelPL.toString());
                    ChatLieu cl = cl_dao.layKichThuocBangTen(excelCL.toString());
                    System.out.println(excelNCC.toString());
                    SanPham sp = new SanPham(maTuSinh(),
                            excelTen.toString(),
                            Double.parseDouble(excelgia.toString()),
                            y,
                            anhSP,
                            excelMT.toString(),
                            ngayN,
                            hanD,
                            new NhaCungCap(ncc.getMaNCC()), new ChatLieu(cl.getMaChatLieu()), new MauSac(m.getMaMau()), new KichThuoc(k.getMaKichThuoc()), new LoaiSanPham(lsp.getMaLoaiSP()));
                    sp_dao.themSP(sp);
                    JOptionPane.showMessageDialog(null, "Import thành công");
                    XoaHetDLTrenTbale();
                    DocDuLieuLenTable();
                }

            } catch (IOException iOException) {
                JOptionPane.showMessageDialog(null, iOException.getMessage());
            } catch (ParseException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelFIS != null) {
                        excelFIS.close();
                    }
                    if (excelBIS != null) {
                        excelBIS.close();
                    }
                    if (excelImportToJTable != null) {
                        excelImportToJTable.close();
                    }
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
        }

    }//GEN-LAST:event_btnIXActionPerformed

    private void cbxCLLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxCLLMouseClicked
        if(!txtTim.getText().isEmpty()){
            txtTim.setText("");
         tr1=new TableRowSorter<DefaultTableModel>(modolSP);
        jtbSanPham.setRowSorter(tr1);         
        }
    }//GEN-LAST:event_cbxCLLMouseClicked

    private void txtTimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimMouseClicked
        filters.removeAll(filters);
        cbxCLL.setSelectedIndex(0);
        cbxML.setSelectedIndex(0);
        cbxKTL.setSelectedIndex(0);
        cbxPLL.setSelectedIndex(0);
        jtbSanPham.setRowSorter(tr);
        filters.removeAll(filters);
    }//GEN-LAST:event_txtTimMouseClicked
    private String maTuSinh() {
        String ma = "SP";
        int tachMa;
        int i = 0, j = 1;
        int[] dem = new int[999];
        String id;
        sp_dao = new DAO_SanPham();
        for (SanPham sanpham : sp_dao.getAllSP()) {
            id = sanpham.getMaSP();
            tachMa = Integer.parseInt(id.substring(2, 5));
            dem[i] = tachMa;
            i++;
        }
        i = 0;
        //gd:  String maPhatSinh= ("SP%3d",i);
        while (j < 999) {
            if (dem[i] < j) {
                if (j <= 9) {
                    ma += "00" + (j);
                } else {
                    ma += "0" + (j);
                }
                break;
            } else if (dem[i] > j) {
                j = dem[i];
            } else {
                i++;
                j++;
            }
        }
        return ma;
    }

    private void DocDuLieuLenTable() {
        sp_dao = new DAO_SanPham();
        ArrayList<SanPham> ds = sp_dao.getAllSP();

        int i = 1;
        for (SanPham sp : ds) {
            modolSP.addRow(new Object[]{i++,
                sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaGoc(), sp.getLoaiSanPham().getTenLoaiSP(), sp.getNhaCungCap().getTenNCC(), sp.getMauSac().getTenMau(), sp.getChatLieu().getTenChatLieu(), sp.getKichThuoc().getTenKichThuoc(),
                sp.getNgayNhap()});
        }

    }

    private void DocDuLieuVaoCombobox() {
        lsp_dao = new DAO_LoaiSP();
        ArrayList<LoaiSanPham> listLSP = lsp_dao.getAllLSP();
        for (LoaiSanPham lsp : listLSP) {
            cbxPLL.addItem(lsp.getTenLoaiSP());
            cbxPLF.addItem(lsp.getTenLoaiSP());
        }
        mau_dao = new DAO_MauSac();
        ArrayList<MauSac> listMau = mau_dao.getAllMau();
        for (MauSac m : listMau) {
            cbxML.addItem(m.getTenMau());
            cbxMF.addItem(m.getTenMau());
        }
        cl_dao = new DAO_ChatLieu();
        ArrayList<ChatLieu> listCL = cl_dao.getAllCL();
        for (ChatLieu cl : listCL) {
            cbxCLF.addItem(cl.getTenChatLieu());
            cbxCLL.addItem(cl.getTenChatLieu());
        }

        ncc_dao = new DAO_NhaCungCap();
        ArrayList<NhaCungCap> listNCC = ncc_dao.getalltbNhaCungCap();
        for (NhaCungCap ncc : listNCC) {
            cbxNCCF.addItem(ncc.getTenNCC());
        }
        kt_dao = new DAO_KichThuoc();
        ArrayList<KichThuoc> listKT = kt_dao.getAllKT();
        for (KichThuoc kt : listKT) {
            cbxKTF.addItem(kt.getTenKichThuoc());
            cbxKTL.addItem(kt.getTenKichThuoc());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnEX;
    private javax.swing.JButton btnIX;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JComboBox<String> cbxCLF;
    private javax.swing.JComboBox<String> cbxCLL;
    private javax.swing.JComboBox<String> cbxKTF;
    private javax.swing.JComboBox<String> cbxKTL;
    private javax.swing.JComboBox<String> cbxMF;
    private javax.swing.JComboBox<String> cbxML;
    private javax.swing.JComboBox<String> cbxNCCF;
    private javax.swing.JComboBox<String> cbxPLF;
    private javax.swing.JComboBox<String> cbxPLL;
    private com.toedter.calendar.JDateChooser hanSD;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtbSanPham;
    private javax.swing.JLabel lblHinhAnh;
    private com.toedter.calendar.JDateChooser ngayNhap;
    private javax.swing.JPanel pnlDuoi;
    private javax.swing.JPanel pnlGiua;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlNut;
    private javax.swing.JPanel pnlNutSP;
    private javax.swing.JPanel pnlThongTin;
    private javax.swing.JPanel pnlTren;
    private javax.swing.JTextArea txaMoTa;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenSP;
    private swing.TextFieldAnimation txtTim;
    // End of variables declaration//GEN-END:variables
}
