/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.DAO_ChiTietHoaDon;
import dao.DAO_ChiTietHoanTra;
import dao.DAO_HoaDon;
import dao.DAO_HoaDonHoan;
import dao.DAO_KhachHang;
import dao.DAO_NhanVien;
import dao.DAO_SanPham;
import dao.DAO_SanPham.thongKeSPBanChay;
import entity.ChiTietHoaDon;
import entity.ChiTietHoanTra;
import entity.HoaDon;
import entity.HoaDonHoanTra;
import entity.KhachHang;
import entity.NhanVien;
import entity.SanPham;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Insets;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Year;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author ACER
 */
public class GD_NVThongKe extends javax.swing.JInternalFrame {

    private DAO_HoaDon hd_dao = new DAO_HoaDon();
    private DAO_NhanVien nv_dao = new DAO_NhanVien();
    private DAO_KhachHang kh_dao = new DAO_KhachHang();
    private dao.DAO_HoaDonHoan hdh_dao = new DAO_HoaDonHoan();
    private DAO_ChiTietHoaDon cthd_dao = new DAO_ChiTietHoaDon();
    private DAO_ChiTietHoanTra ctht_dao = new DAO_ChiTietHoanTra();
    private DAO_SanPham sp_dao = new DAO_SanPham();
    private final Date today;

    DecimalFormat df = new DecimalFormat("#,##0 VND");

    private static class RoundedBorder implements Border {

        private int radius;

        RoundedBorder(int radius) {
            this.radius = radius;
        }

        public Insets getBorderInsets(Component c) {
            return new Insets(this.radius + 1, this.radius + 1, this.radius + 2, this.radius);
        }

        public boolean isBorderOpaque() {
            return true;
        }

        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
        }
    }
    private String username;

    /**
     * Creates new form QuanLyHoaDon
     */
    public GD_NVThongKe(String _username) {
        this.setRootPaneCheckingEnabled(false);
        javax.swing.plaf.InternalFrameUI ui
                = this.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) ui).setNorthPane(null);
        initComponents();
        this.setFocusable(true);
        username = _username;
        today = new Date();
        tuNgay.setDate(new Date());
        denNgay.setDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlTop = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        pnlTieuChi = new javax.swing.JPanel();
        lblTuNgay = new javax.swing.JLabel();
        lblDenNgay = new javax.swing.JLabel();
        lblNam = new javax.swing.JLabel();
        tuNgay = new com.toedter.calendar.JDateChooser();
        denNgay = new com.toedter.calendar.JDateChooser();
        jycNam = new com.toedter.calendar.JYearChooser();
        btnThongKe = new swing.Button();
        btnQuy4 = new swing.Button();
        btnQuy3 = new swing.Button();
        btnQuy2 = new swing.Button();
        btnQuy1 = new swing.Button();
        btnCaNam = new swing.Button();
        pnlBottom = new javax.swing.JPanel();
        tbpThongKe = new javax.swing.JTabbedPane();
        pnlDoanhThu = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        pnlTongHDDB = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblTongHDDB = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblTongHD = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        pnlTongTienBan = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblTongTienBan = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblTongTienBanD = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        pnlTongHDTra = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblTongHDTra = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblSoHDH = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        pnlTongTienHoan = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lblTongTienHoan = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        tongTienHoann = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        pnlKetToan = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        lblKetToan = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        lblKetToann = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setFrameIcon(null);

        pnlMain.setBackground(new java.awt.Color(204, 204, 255));

        pnlTop.setBackground(new java.awt.Color(204, 204, 255));

        lblTieuDe.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        lblTieuDe.setText("THỐNG KÊ");

        pnlTieuChi.setBackground(new java.awt.Color(204, 204, 255));
        pnlTieuChi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTuNgay.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblTuNgay.setText("Từ ngày:");

        lblDenNgay.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblDenNgay.setText("Đến ngày: ");

        lblNam.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblNam.setText("Năm: ");

        btnThongKe.setText("Thống kê");
        btnThongKe.setColor1(new java.awt.Color(51, 0, 255));
        btnThongKe.setColor2(new java.awt.Color(204, 0, 204));
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        btnQuy4.setText("Quý 4");
        btnQuy4.setColor1(new java.awt.Color(51, 0, 255));
        btnQuy4.setColor2(new java.awt.Color(204, 0, 204));
        btnQuy4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuy4ActionPerformed(evt);
            }
        });

        btnQuy3.setText("Quý 3");
        btnQuy3.setColor1(new java.awt.Color(51, 0, 255));
        btnQuy3.setColor2(new java.awt.Color(204, 0, 204));
        btnQuy3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuy3ActionPerformed(evt);
            }
        });

        btnQuy2.setText("Quý 2");
        btnQuy2.setColor1(new java.awt.Color(51, 0, 255));
        btnQuy2.setColor2(new java.awt.Color(204, 0, 204));
        btnQuy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuy2ActionPerformed(evt);
            }
        });

        btnQuy1.setText("Quý 1");
        btnQuy1.setColor1(new java.awt.Color(51, 0, 255));
        btnQuy1.setColor2(new java.awt.Color(204, 0, 204));
        btnQuy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuy1ActionPerformed(evt);
            }
        });

        btnCaNam.setText("Cả năm");
        btnCaNam.setColor1(new java.awt.Color(51, 0, 255));
        btnCaNam.setColor2(new java.awt.Color(204, 0, 204));
        btnCaNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaNamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTieuChiLayout = new javax.swing.GroupLayout(pnlTieuChi);
        pnlTieuChi.setLayout(pnlTieuChiLayout);
        pnlTieuChiLayout.setHorizontalGroup(
            pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTieuChiLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNam, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTieuChiLayout.createSequentialGroup()
                        .addComponent(tuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTieuChiLayout.createSequentialGroup()
                        .addComponent(jycNam, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnCaNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTieuChiLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnQuy1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuy2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(denNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTieuChiLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnQuy3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuy4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTieuChiLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        pnlTieuChiLayout.setVerticalGroup(
            pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTieuChiLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblDenNgay, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addComponent(lblTuNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tuNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(denNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jycNam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlTieuChiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnQuy4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnQuy3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnQuy2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnQuy1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCaNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addGroup(pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopLayout.createSequentialGroup()
                        .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(537, 537, 537))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopLayout.createSequentialGroup()
                        .addComponent(pnlTieuChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(186, 186, 186))))
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTieuChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBottom.setBackground(new java.awt.Color(204, 204, 255));

        tbpThongKe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbpThongKe.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        pnlDoanhThu.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlDoanhThuComponentShown(evt);
            }
        });
        pnlDoanhThu.setLayout(new javax.swing.BoxLayout(pnlDoanhThu, javax.swing.BoxLayout.X_AXIS));

        jPanel11.setMaximumSize(new java.awt.Dimension(4000, 4000));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.Y_AXIS));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 752, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel17);

        jPanel18.setLayout(new javax.swing.BoxLayout(jPanel18, javax.swing.BoxLayout.X_AXIS));

        jPanel20.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jPanel20.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel20.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jPanel18.add(jPanel20);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(new javax.swing.BoxLayout(jPanel15, javax.swing.BoxLayout.Y_AXIS));

        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.X_AXIS));

        pnlTongHDDB.setBackground(new java.awt.Color(0, 204, 0));
        pnlTongHDDB.setMaximumSize(new java.awt.Dimension(2000, 2000));
        pnlTongHDDB.setMinimumSize(new java.awt.Dimension(100, 100));
        pnlTongHDDB.setPreferredSize(new java.awt.Dimension(300, 200));
        pnlTongHDDB.setLayout(new java.awt.GridLayout(2, 1));

        jPanel1.setBackground(new java.awt.Color(0, 204, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongHDDB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongHDDB.setForeground(new java.awt.Color(204, 255, 255));
        lblTongHDDB.setText("Tổng số hóa đơn đã bán");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTongHDDB)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTongHDDB)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlTongHDDB.add(jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 204, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel2.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongHD.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongHD.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongHD)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongHD)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongHDDB.add(jPanel2);

        jPanel22.add(pnlTongHDDB);

        jPanel23.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jPanel23.setMinimumSize(new java.awt.Dimension(20, 20));
        jPanel23.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel22.add(jPanel23);

        pnlTongTienBan.setBackground(new java.awt.Color(204, 204, 0));
        pnlTongTienBan.setMaximumSize(new java.awt.Dimension(2000, 2000));
        pnlTongTienBan.setMinimumSize(new java.awt.Dimension(100, 100));
        pnlTongTienBan.setPreferredSize(new java.awt.Dimension(300, 200));
        pnlTongTienBan.setLayout(new java.awt.GridLayout(2, 1));

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));
        jPanel3.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel3.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongTienBan.setBackground(new java.awt.Color(255, 255, 255));
        lblTongTienBan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongTienBan.setForeground(new java.awt.Color(255, 255, 255));
        lblTongTienBan.setText("Tổng tiền bán được");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongTienBan)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongTienBan)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongTienBan.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 0));
        jPanel4.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel4.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongTienBanD.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongTienBanD.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongTienBanD)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongTienBanD)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongTienBan.add(jPanel4);

        jPanel22.add(pnlTongTienBan);

        jPanel15.add(jPanel22);

        jPanel24.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel24.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 642, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel15.add(jPanel24);

        jPanel21.setLayout(new javax.swing.BoxLayout(jPanel21, javax.swing.BoxLayout.X_AXIS));

        pnlTongHDTra.setBackground(new java.awt.Color(102, 102, 255));
        pnlTongHDTra.setMaximumSize(new java.awt.Dimension(2000, 2000));
        pnlTongHDTra.setMinimumSize(new java.awt.Dimension(100, 100));
        pnlTongHDTra.setPreferredSize(new java.awt.Dimension(300, 200));
        pnlTongHDTra.setLayout(new java.awt.GridLayout(2, 1));

        jPanel5.setBackground(new java.awt.Color(102, 102, 255));
        jPanel5.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel5.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongHDTra.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongHDTra.setForeground(new java.awt.Color(255, 255, 255));
        lblTongHDTra.setText("Tổng số hóa đơn hoàn trả");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongHDTra)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTongHDTra)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongHDTra.add(jPanel5);

        jPanel6.setBackground(new java.awt.Color(102, 102, 255));
        jPanel6.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel6.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 100));

        lblSoHDH.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblSoHDH.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblSoHDH)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblSoHDH)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongHDTra.add(jPanel6);

        jPanel21.add(pnlTongHDTra);

        jPanel25.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jPanel25.setMinimumSize(new java.awt.Dimension(20, 20));
        jPanel25.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanel21.add(jPanel25);

        pnlTongTienHoan.setBackground(new java.awt.Color(255, 0, 153));
        pnlTongTienHoan.setMaximumSize(new java.awt.Dimension(2000, 2000));
        pnlTongTienHoan.setPreferredSize(new java.awt.Dimension(300, 200));
        pnlTongTienHoan.setLayout(new java.awt.GridLayout(2, 1));

        jPanel8.setBackground(new java.awt.Color(255, 0, 153));
        jPanel8.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel8.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel8.setPreferredSize(new java.awt.Dimension(300, 100));

        lblTongTienHoan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTongTienHoan.setForeground(new java.awt.Color(255, 255, 255));
        lblTongTienHoan.setText("Tổng tiền hoàn lại");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTongTienHoan)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTongTienHoan)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlTongTienHoan.add(jPanel8);

        jPanel7.setBackground(new java.awt.Color(255, 0, 153));
        jPanel7.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel7.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel7.setPreferredSize(new java.awt.Dimension(300, 100));

        tongTienHoann.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tongTienHoann.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tongTienHoann)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tongTienHoann)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlTongTienHoan.add(jPanel7);

        jPanel21.add(pnlTongTienHoan);

        jPanel15.add(jPanel21);

        jPanel18.add(jPanel15);

        jPanel19.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jPanel19.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel19.setPreferredSize(new java.awt.Dimension(50, 100));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jPanel18.add(jPanel19);

        jPanel11.add(jPanel18);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 752, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        jPanel11.add(jPanel16);

        pnlDoanhThu.add(jPanel11);

        jPanel12.setLayout(new java.awt.GridLayout(3, 1));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel12.add(jPanel13);

        jPanel26.setBackground(new java.awt.Color(153, 0, 51));
        jPanel26.setLayout(new javax.swing.BoxLayout(jPanel26, javax.swing.BoxLayout.X_AXIS));

        jPanel27.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel27.setMinimumSize(new java.awt.Dimension(30, 30));
        jPanel27.setPreferredSize(new java.awt.Dimension(20, 10));

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel26.add(jPanel27);

        pnlKetToan.setBackground(new java.awt.Color(153, 0, 51));
        pnlKetToan.setMaximumSize(new java.awt.Dimension(1000, 1000));
        pnlKetToan.setMinimumSize(new java.awt.Dimension(100, 100));
        pnlKetToan.setPreferredSize(new java.awt.Dimension(300, 500));
        pnlKetToan.setLayout(new javax.swing.BoxLayout(pnlKetToan, javax.swing.BoxLayout.Y_AXIS));

        jPanel9.setBackground(new java.awt.Color(153, 0, 51));
        jPanel9.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel9.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 400));

        lblKetToan.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblKetToan.setForeground(new java.awt.Color(255, 255, 255));
        lblKetToan.setText("Kết toán");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblKetToan)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblKetToan)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlKetToan.add(jPanel9);

        jPanel10.setBackground(new java.awt.Color(153, 0, 51));
        jPanel10.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel10.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel10.setPreferredSize(new java.awt.Dimension(400, 400));

        lblKetToann.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblKetToann.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblKetToann)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblKetToann)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnlKetToan.add(jPanel10);

        jPanel26.add(pnlKetToan);

        jPanel28.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel28.setMinimumSize(new java.awt.Dimension(30, 30));
        jPanel28.setPreferredSize(new java.awt.Dimension(70, 30));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel26.add(jPanel28);

        jPanel12.add(jPanel26);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel12.add(jPanel14);

        pnlDoanhThu.add(jPanel12);

        tbpThongKe.addTab("Doanh Thu", pnlDoanhThu);

        javax.swing.GroupLayout pnlBottomLayout = new javax.swing.GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBottomLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(tbpThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 1224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBottomLayout.setVerticalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBottomLayout.createSequentialGroup()
                .addComponent(tbpThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date ngayTim = tuNgay.getDate();
        Date ngayCanTim = denNgay.getDate();
        String TuNgay = sdf.format(tuNgay.getDate());
        String DenNgay = sdf.format(denNgay.getDate());
        if (ngayTim.after(today)) {
            JOptionPane.showMessageDialog(null, "Từ ngày không lớn hơn thời gian hiện tại");
        } else {
            if (ngayTim.after(ngayCanTim)) {
                JOptionPane.showMessageDialog(null, "Ngày tìm không lớn hơn ngày cần tìm");
            } else {
                //Thống kê doanh thu

                ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuTheoNV(TuNgay, DenNgay, username);
                ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
                lblTongHD.setText(dsHD.size() + "");
                long tongThanhTien = 0;
                double tongThanhTienVIP = 0;
                double tongThanhTienThuong = 0;

                for (HoaDon hd : dsHD) {
                    dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
                    for (ChiTietHoaDon cthd : dsCTHD) {
                        if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                            tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                        } else {
                            tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                        }

                    }

                }
                tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
                tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
                tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
                lblTongTienBanD.setText(df.format(tongThanhTien));

                //Thống kê hoàn
                ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeHoanTraNV(TuNgay, DenNgay, username);
                ArrayList<ChiTietHoanTra> dsCTHT;
                lblSoHDH.setText(dsHDHT.size() + "");
                long tongThanhTienHoan = 0;
                double tongThanhTienHoanVIP = 0;
                double tongThanhTienHoanThuong = 0;
                KhachHang kh;

                for (HoaDonHoanTra hdht : dsHDHT) {
                    dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
                    for (ChiTietHoanTra ctht : dsCTHT) {
                        kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                        if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                            tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                        } else {
                            tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                        }
                    }
                }
                tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
                tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
                tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
                tongTienHoann.setText(df.format(tongThanhTienHoan));
                String s = "";
                long thu = 0;
                long chi = 0;
                if (tongThanhTien > tongThanhTienHoan) {
                    thu = tongThanhTien - tongThanhTienHoan;
                    s += "Thu: " + df.format(thu);
                } else {
                    chi = tongThanhTienHoan - tongThanhTien;
                    s += "Chi: " + df.format(chi);
                }
                lblKetToann.setText(s);

            }
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnQuy4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuy4ActionPerformed
        int year = jycNam.getYear();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        int namHiemTai = cal.get(Calendar.YEAR);
        if (year > namHiemTai) {
            JOptionPane.showMessageDialog(null, "Năm được chọn không lớn hơn năm hiện tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String b = year + "-10-01";
        String c = year + "-12-31";
        ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuTheoNV(b, c, username);
        ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
        lblTongHD.setText(dsHD.size() + "");
        long tongThanhTien = 0;
        double tongThanhTienVIP = 0;
        double tongThanhTienThuong = 0;

        for (HoaDon hd : dsHD) {
            dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
            for (ChiTietHoaDon cthd : dsCTHD) {
                if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                } else {
                    tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                }

            }

        }
        tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
        tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
        tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
        lblTongTienBanD.setText(df.format(tongThanhTien));
        //hoàn
        ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeHoanTraNV(b, c, username);
        ArrayList<ChiTietHoanTra> dsCTHT;
        lblSoHDH.setText(dsHDHT.size() + "");
        long tongThanhTienHoan = 0;
        double tongThanhTienHoanVIP = 0;
        double tongThanhTienHoanThuong = 0;
        KhachHang kh;

        for (HoaDonHoanTra hdht : dsHDHT) {
            dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
            for (ChiTietHoanTra ctht : dsCTHT) {
                kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                } else {
                    tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                }
            }
        }
        tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
        tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
        tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
        tongTienHoann.setText(df.format(tongThanhTienHoan));
        String s = "";
        long thu = 0;
        long chi = 0;
        if (tongThanhTien > tongThanhTienHoan) {
            thu = tongThanhTien - tongThanhTienHoan;
            s += "Thu: " + df.format(thu);
        } else {
            chi = tongThanhTienHoan - tongThanhTien;
            s += "Chi: " + df.format(chi);
        }

        lblKetToann.setText(s);

    }//GEN-LAST:event_btnQuy4ActionPerformed

    private void btnQuy3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuy3ActionPerformed
        int year = jycNam.getYear();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        int namHiemTai = cal.get(Calendar.YEAR);
        if (year > namHiemTai) {
            JOptionPane.showMessageDialog(null, "Năm được chọn không lớn hơn năm hiện tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String b = year + "-07-01";
        String c = year + "-09-30";
        ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuTheoNV(b, c, username);
        ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
        lblTongHD.setText(dsHD.size() + "");
        long tongThanhTien = 0;
        double tongThanhTienVIP = 0;
        double tongThanhTienThuong = 0;

        for (HoaDon hd : dsHD) {
            dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
            for (ChiTietHoaDon cthd : dsCTHD) {
                if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                } else {
                    tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                }

            }

        }
        tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
        tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
        tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
        lblTongTienBanD.setText(df.format(tongThanhTien));
        //hoàn
        ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeHoanTraNV(b, c, username);
        ArrayList<ChiTietHoanTra> dsCTHT;
        lblSoHDH.setText(dsHDHT.size() + "");
        long tongThanhTienHoan = 0;
        double tongThanhTienHoanVIP = 0;
        double tongThanhTienHoanThuong = 0;
        KhachHang kh;

        for (HoaDonHoanTra hdht : dsHDHT) {
            dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
            for (ChiTietHoanTra ctht : dsCTHT) {
                kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                } else {
                    tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                }
            }
        }
        tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
        tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
        tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
        tongTienHoann.setText(df.format(tongThanhTienHoan));
        String s = "";
        long thu = 0;
        long chi = 0;
        if (tongThanhTien > tongThanhTienHoan) {
            thu = tongThanhTien - tongThanhTienHoan;
            s += "Thu: " + df.format(thu);
        } else {
            chi = tongThanhTienHoan - tongThanhTien;
            s += "Chi: " + df.format(chi);
        }

        lblKetToann.setText(s);

    }//GEN-LAST:event_btnQuy3ActionPerformed

    private void btnQuy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuy2ActionPerformed

        int year = jycNam.getYear();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        int namHiemTai = cal.get(Calendar.YEAR);
        if (year > namHiemTai) {
            JOptionPane.showMessageDialog(null, "Năm được chọn không lớn hơn năm hiện tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String b = year + "-04-01";
        String c = year + "-06-30";
        ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuTheoNV(b, c, username);
        ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
        lblTongHD.setText(dsHD.size() + "");
        long tongThanhTien = 0;
        double tongThanhTienVIP = 0;
        double tongThanhTienThuong = 0;

        for (HoaDon hd : dsHD) {
            dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
            for (ChiTietHoaDon cthd : dsCTHD) {
                if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                } else {
                    tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                }

            }

        }
        tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
        tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
        tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
        lblTongTienBanD.setText(df.format(tongThanhTien));
        //hoàn
        ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeHoanTraNV(b, c, username);
        ArrayList<ChiTietHoanTra> dsCTHT;
        lblSoHDH.setText(dsHDHT.size() + "");
        long tongThanhTienHoan = 0;
        double tongThanhTienHoanVIP = 0;
        double tongThanhTienHoanThuong = 0;
        KhachHang kh;

        for (HoaDonHoanTra hdht : dsHDHT) {
            dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
            for (ChiTietHoanTra ctht : dsCTHT) {
                kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                } else {
                    tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                }
            }
        }
        tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
        tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
        tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
        tongTienHoann.setText(df.format(tongThanhTienHoan));
        String s = "";
        long thu = 0;
        long chi = 0;
        if (tongThanhTien > tongThanhTienHoan) {
            thu = tongThanhTien - tongThanhTienHoan;
            s += "Thu: " + df.format(thu);
        } else {
            chi = tongThanhTienHoan - tongThanhTien;
            s += "Chi: " + df.format(chi);
        }

        lblKetToann.setText(s);

    }//GEN-LAST:event_btnQuy2ActionPerformed

    private void btnQuy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuy1ActionPerformed
        int year = jycNam.getYear();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        int namHiemTai = cal.get(Calendar.YEAR);
        if (year > namHiemTai) {
            JOptionPane.showMessageDialog(null, "Năm được chọn không lớn hơn năm hiện tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String b = year + "-01-01";
        String c = year + "-03-31";
        ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuTheoNV(b, c, username);
        ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
        lblTongHD.setText(dsHD.size() + "");
        long tongThanhTien = 0;
        double tongThanhTienVIP = 0;
        double tongThanhTienThuong = 0;

        for (HoaDon hd : dsHD) {
            dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
            for (ChiTietHoaDon cthd : dsCTHD) {
                if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                } else {
                    tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                }

            }

        }
        tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
        tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
        tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
        lblTongTienBanD.setText(df.format(tongThanhTien));
        //hoàn
        ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeHoanTraNV(b, c, username);
        ArrayList<ChiTietHoanTra> dsCTHT;
        lblSoHDH.setText(dsHDHT.size() + "");
        long tongThanhTienHoan = 0;
        double tongThanhTienHoanVIP = 0;
        double tongThanhTienHoanThuong = 0;
        KhachHang kh;

        for (HoaDonHoanTra hdht : dsHDHT) {
            dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
            for (ChiTietHoanTra ctht : dsCTHT) {
                kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                } else {
                    tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                }
            }
        }
        tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
        tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
        tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
        tongTienHoann.setText(df.format(tongThanhTienHoan));
        String s = "";
        long thu = 0;
        long chi = 0;
        if (tongThanhTien > tongThanhTienHoan) {
            thu = tongThanhTien - tongThanhTienHoan;
            s += "Thu: " + df.format(thu);
        } else {
            chi = tongThanhTienHoan - tongThanhTien;
            s += "Chi: " + df.format(chi);
        }
        lblKetToann.setText(s);

    }//GEN-LAST:event_btnQuy1ActionPerformed

    private void btnCaNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaNamActionPerformed

        //Thống ê theo năm
        int year = jycNam.getYear();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        int namHiemTai = cal.get(Calendar.YEAR);
        if (year > namHiemTai) {
            JOptionPane.showMessageDialog(null, "Năm được chọn không lớn hơn năm hiện tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ArrayList<HoaDon> dsHD = hd_dao.thongKeDoanhThuNVTheoNam(year, username);
        ArrayList<ChiTietHoaDon> dsCTHD = new ArrayList<ChiTietHoaDon>();
        lblTongHD.setText(dsHD.size() + "");
        long tongThanhTien = 0;
        double tongThanhTienVIP = 0;
        double tongThanhTienThuong = 0;

        for (HoaDon hd : dsHD) {
            dsCTHD = cthd_dao.layDSHDBangMa(hd.getMaHD());
            for (ChiTietHoaDon cthd : dsCTHD) {
                if (hd.getKhachHang().getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienVIP = tongThanhTienVIP + cthd.getTongTien();
                } else {
                    tongThanhTienThuong = tongThanhTienThuong + cthd.getTongTien();
                }
            }
        }
        tongThanhTienVIP = tongThanhTienVIP - tongThanhTienVIP * 0.05;
        tongThanhTienThuong = tongThanhTienThuong + tongThanhTienThuong * 0.05;
        tongThanhTien = (long) tongThanhTienVIP + (long) tongThanhTienThuong;
        lblTongTienBanD.setText(df.format(tongThanhTien));

        //Thống kê hoàn
        ArrayList<HoaDonHoanTra> dsHDHT = hdh_dao.thongKeDoanhThuNVTheoNam(year, username);
        ArrayList<ChiTietHoanTra> dsCTHT;
        lblSoHDH.setText(dsHDHT.size() + "");
        long tongThanhTienHoan = 0;
        double tongThanhTienHoanVIP = 0;
        double tongThanhTienHoanThuong = 0;
        KhachHang kh;

        for (HoaDonHoanTra hdht : dsHDHT) {
            dsCTHT = ctht_dao.layDSCTHTBangMa(hdht.getMaHDHT());
            for (ChiTietHoanTra ctht : dsCTHT) {
                kh = kh_dao.getKHBangMa(hdht.getHoaDon().getKhachHang().getMaKH());
                if (kh.getLoaiKhachHang().getTenLoai().equalsIgnoreCase("VIP")) {
                    tongThanhTienHoanVIP = tongThanhTienHoanVIP + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                } else {
                    tongThanhTienHoanThuong = tongThanhTienHoanThuong + ctht.getSoLuong() * ctht.getSanPham().getGiaGoc();
                }
            }
        }
        tongThanhTienHoanVIP = tongThanhTienHoanVIP - tongThanhTienHoanVIP * 0.05;
        tongThanhTienHoanThuong = tongThanhTienHoanThuong + tongThanhTienHoanThuong * 0.05;
        tongThanhTienHoan = (long) tongThanhTienHoanVIP + (long) tongThanhTienHoanThuong;
        tongTienHoann.setText(df.format(tongThanhTienHoan));
        String s = "";
        long thu = 0;
        long chi = 0;
        if (tongThanhTien > tongThanhTienHoan) {
            thu = tongThanhTien - tongThanhTienHoan;
            s += "Thu: " + df.format(thu);
        } else {
            chi = tongThanhTienHoan - tongThanhTien;
            s += "Chi: " + df.format(chi);
        }
        //
        lblKetToann.setText(s);

    }//GEN-LAST:event_btnCaNamActionPerformed

    private void pnlDoanhThuComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlDoanhThuComponentShown
        tuNgay.setEnabled(true);
        denNgay.setEnabled(true);
        jycNam.setEnabled(true);
        btnThongKe.setEnabled(true);
        btnQuy1.setEnabled(true);
        btnQuy2.setEnabled(true);
        btnQuy3.setEnabled(true);
        btnQuy4.setEnabled(true);
    }//GEN-LAST:event_pnlDoanhThuComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.Button btnCaNam;
    private swing.Button btnQuy1;
    private swing.Button btnQuy2;
    private swing.Button btnQuy3;
    private swing.Button btnQuy4;
    private swing.Button btnThongKe;
    private com.toedter.calendar.JDateChooser denNgay;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private com.toedter.calendar.JYearChooser jycNam;
    private javax.swing.JLabel lblDenNgay;
    private javax.swing.JLabel lblKetToan;
    private javax.swing.JLabel lblKetToann;
    private javax.swing.JLabel lblNam;
    private javax.swing.JLabel lblSoHDH;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTongHD;
    private javax.swing.JLabel lblTongHDDB;
    private javax.swing.JLabel lblTongHDTra;
    private javax.swing.JLabel lblTongTienBan;
    private javax.swing.JLabel lblTongTienBanD;
    private javax.swing.JLabel lblTongTienHoan;
    private javax.swing.JLabel lblTuNgay;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlKetToan;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTieuChi;
    private javax.swing.JPanel pnlTongHDDB;
    private javax.swing.JPanel pnlTongHDTra;
    private javax.swing.JPanel pnlTongTienBan;
    private javax.swing.JPanel pnlTongTienHoan;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JTabbedPane tbpThongKe;
    private javax.swing.JLabel tongTienHoann;
    private com.toedter.calendar.JDateChooser tuNgay;
    // End of variables declaration//GEN-END:variables
}
